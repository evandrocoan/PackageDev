// SYNTAX TEST "Packages/PackageDev/Package/Sublime Text Build System/Sublime Text Build System.sublime-syntax"

// <- source.json.sublime.build

// comment
// ^^^^^^^ comment.line.double-slash - meta.build.collection.sublime-build - meta.sequence.json
{
    "target": "run_syntax_tests",,
//  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.mapping - meta.mapping meta.mapping
//  ^^^^^^^^ meta.mapping.key.json meta.main-key.sublime-build string.quoted.double.json
//          ^ punctuation.separator.mapping.key-value.json
//            ^^^^^^^^^^^^^^^^^^ meta.mapping.value.json meta.command-name.sublime-build string.quoted.double.json
//             ^^^^^^^^^^^^^^^^ support.constant.command-name.sublime-build
//                              ^ punctuation.separator.mapping.pair.json
//                               ^ invalid.illegal.expected-key.sublime-build
    "selector": "source.mylang",
//  ^^^^^^^^^^ meta.mapping.key.json meta.main-key.sublime-build string.quoted.double.json
//   ^^^^^^^^ keyword.other.main.sublime-build
//              ^^^^^^^^^^^^^^^ meta.mapping.value.json string.quoted.double.json
//               ^^^^^^ string.unquoted.scope-segment.scope-selector
//                     ^ punctuation.separator.scope-segments.scope-selector
//                      ^^^^^^ string.unquoted.scope-segment.scope-selector

        "other_key": "value",
//      ^^^^^^^^^^^ meta.mapping.key.json meta.main-key.sublime-build string.quoted.double.json
//       ^^^^^^^^^ - keyword.other.main.sublime-build
//                   ^^^^^^^ meta.mapping.value.json string.quoted.double.json

    "file_regex": "^[ ]*File \"(...*?)\", line ([0-9]*)",
//  ^^^^^^^^^^^^  meta.mapping.key.json meta.main-key.sublime-build string.quoted.double.json
//   ^^^^^^^^^^ keyword.other.main.sublime-build
//                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.mapping.value.json string.quoted.double.json
//                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.regexp.embedded.json-string


    "working_dir": "${project_path:${folder/\.foo/$0-test/g}}",
//  ^^^^^^^^^^^^^ meta.mapping.key.json meta.main-key.sublime-build string.quoted.double.json
//   ^^^^^^^^^^^ keyword.other.main.sublime-build
//                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.mapping.value.json string.quoted.double.json
//                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.placeholder-string.sublime-build
//                    ^^^^^^^^^^^^^ meta.placeholder-name.sublime-build
//                    ^^^^^^^^^^^^ constant.other.placeholder.sublime-build
//                                 ^ - meta.placeholder-name.sublime-build
//                                   ^^^^^^^ meta.placeholder-name.sublime-build
//                                    ^^^^^ constant.other.placeholder.sublime-build
//                                          ^ - meta.placeholder-name.sublime-build
//                                          ^^ constant.character.escape.regexp
//                                                ^^ keyword.other.backref-and-recursion.regexp-replacement
//                                                        ^ constant.other.regex-modifier.placeholder.sublime-build
//                                                         ^ keyword.other.block.end.placeholder.sublime-build
//                                                          ^ keyword.other.block.end.placeholder.sublime-build

// only built-in placeholders should be highlighted as constants
    "working_dir" : "${PARAM}",
//                     ^^^^^ - constant.other.placeholder.sublime-build

    "osx": "test",
//         ^ invalid.illegal.expected-mapping.sublime-build

    "osx": {
//  ^^^^^ meta.mapping.key.json meta.main-key.sublime-build string.quoted.double.json
//   ^^^ keyword.other.main.sublime-build
//         ^ meta.mapping.value.json meta.os.sublime-build meta.mapping.json punctuation.section.mapping.begin.json
        "file_regex": "^(...*?):([0-9]+): ([0-9]*)([^\\.]+)"
//      ^^^^^^^^^^^^ meta.mapping.key.json meta.main-key.sublime-build string.quoted.double.json
//       ^^^^^^^^^^ keyword.other.main.sublime-build
//                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ string.quoted.double.json
//                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.regexp.embedded.json-string
    },


    "env": {
        "PYTHONIOENCODING": "utf-8"
    },
    "env": "path",
//  ^^^^^ meta.mapping.key.json meta.main-key.sublime-build string.quoted.double.json
//   ^^^ keyword.other.main.sublime-build
//         ^^^^^^ invalid.illegal.expected-mapping.sublime-keymap

    "cmd":  ["python", "-u", "$file"],
//  ^^^^^ meta.mapping.key.json meta.main-key.sublime-build string.quoted.double.json
//   ^^^ keyword.other.main.sublime-build
//          ^^^^^^^^^^^^^^^^^^^^^^^^^ meta.mapping.value.json meta.sequence.json meta.cmd.sublime-build
//           ^^^^^^^^ string.quoted.double.json
//                           ^^^^^^^ meta.placeholder-string.sublime-build string.quoted.double.json
//                             ^^^^ constant.other.placeholder.sublime-build

// cmd should also accept a string (if shell: true)
    "cmd": "command \"$file\" && ${file/\.ext/\.ty/g}",
//  ^^^^^ meta.mapping.key.json meta.main-key.sublime-build string.quoted.double.json
//   ^^^ keyword.other.main.sublime-build
//         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.mapping.value.json meta.placeholder-string.sublime-build string.quoted.double.json
//                     ^^^^ meta.placeholder-name.sublime-build
//                     ^^^^ constant.other.placeholder.sublime-build
//                                      ^^ constant.character.escape.regexp
//                                            ^^ constant.character.escape.regexp-replacement
//                                                 ^ constant.other.regex-modifier.placeholder.sublime-build
//

    "shell_cmd": "python -u \"$file\" && ls",
//  ^^^^^^^^^^^ meta.mapping.key.json meta.main-key.sublime-build string.quoted.double.json
//   ^^^^^^^^^ keyword.other.main.sublime-build
//               ^^^^^^^^^^^^^^^^^^^^^^^^^^ string.quoted.double.json
//                            ^^^^^ meta.placeholder-string.sublime-build string.quoted.double.json
//                             ^^^^ constant.other.placeholder.sublime-build

    "shell_cmd": ["$file"],
//               ^ invalid.illegal.expected-string.sublime-build


    "shell": false,
//  ^^^^^^^ meta.build.collection.sublime-build meta.mapping.key.json meta.main-key.sublime-build string.quoted.double.json
//   ^^^^^ keyword.other.main.sublime-build
//           ^^^^^ meta.mapping.value.json constant.language.json
    "shell": "foo",
//           ^^^^^ invalid.illegal.expected-boolean.sublime-build


// name is not a keyword outside variants
    "name": "Foo",
//  ^^^^^^ meta.mapping.key.json meta.main-key.sublime-build string.quoted.double.json
//   ^^^^ - keyword.other.main.sublime-build

    "variants": [
//              ^ meta.build.collection.sublime-build meta.mapping.value.json meta.variants.sublime-build meta.sequence.json punctuation.section.sequence.begin.json
        "test"
//      ^^^^^^ invalid.illegal.build.expected-mapping.sublime-build
        {
            "name": "Foo",
//          ^^^^^^ meta.mapping.value.json meta.variants.sublime-build meta.sequence.json meta.mapping.key.json meta.main-key.sublime-build string.quoted.double.json
//           ^^^^ keyword.other.main.sublime-build
//                  ^^^^^ meta.mapping.value.json meta.mapping.value.json string.quoted.double.json

            "target": "do_something",
//          ^^^^^^^^ meta.mapping.value.json meta.variants.sublime-build meta.sequence.json meta.mapping.key.json meta.main-key.sublime-build string.quoted.double.json
//           ^^^^^^ keyword.other.main.sublime-build
//                    ^^^^^^^^^^^^^^ meta.mapping.value.json meta.mapping.value.json meta.command-name.sublime-build string.quoted.double.json
//                     ^^^^^^^^^^^^ support.constant.command-name.sublime-build

// selector is not a keyword inside variants
            "selector": "source.mylang",
//          ^^^^^^^^^^ meta.mapping.value.json meta.variants.sublime-build meta.sequence.json meta.mapping.key.json meta.main-key.sublime-build string.quoted.double.json
//           ^^^^^^^^ - keyword.other.main.sublime-build

            "osx": {
//          ^^^^^ meta.mapping.key.json meta.main-key.sublime-build string.quoted.double.json
//           ^^^ keyword.other.main.sublime-build
                "file_regex": "^(...*?):([0-9]+): ([0-9]*)([^\\.]+)"
//              ^^^^^^^^^^^^ meta.mapping.key.json meta.main-key.sublime-build string.quoted.double.json
//               ^^^^^^^^^^ keyword.other.main.sublime-build
//                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ string.quoted.double.json
//                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.regexp.embedded.json-string
            },
        },
    ]
}

  ,[]//fgfg
// <- - invalid.illegal
//^^^ invalid.illegal.expected-comment-or-eof.sublime-build
//   ^^ comment.line.double-slash - invalid.illegal
